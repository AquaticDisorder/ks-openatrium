<?php
/**
 * Implements hook_og_context.negotiation_info()
 * 
 * Adds a method to /admin/config/group/context to grab the og context value
 *   through a custom session variable (see session_context_field_access).
 */
function session_context_og_context_negotiation_info() {
  $providers = array();

  $providers['sessions'] = array(
    'name' => t('Sessions'),
    'description' => t("Determine context by checking session variables."),
    'callback' => 'session_context_og_context_handler_sessions',
  );

  return $providers;
}

/**
 * Callback to pass the og context value based on the last group or group
 *   content page visited.
 */
function session_context_og_context_handler_sessions() {
  if (isset($_SESSION['oa2_group_id'])) {
    $gids['node'][0] = $_SESSION['oa2_group_id'];
  }
  else {
    $gids = FALSE;
  }
  return $gids;
}

/**
 * Implements hook_field_access
 *
 * Determines the og context value for session_context_og_context_handler_sessions
 *   by looking the entity's node value or the og_group_ref field value on
 *   group and group content page.
 */
function session_context_field_access($op, $field, $entity_type, $entity, $account) {
  if (empty($entity->nid)) {
    return;
  }

  $_SESSION['oa2_group_id'] = $entity->nid;

  if (!empty($entity->og_group_ref[$entity->language][0]['target_id'])) {
    $_SESSION['oa2_group_id'] = $entity->og_group_ref[$entity->language][0]['target_id'];
  }

}

/**
 * Implements hook_form_alter
 *
 * Instantiates the default value for the field 'og_group_ref' if an og group id
 *   exists.
 */
function session_context_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'node_form') && empty($form['og_group_ref']['und'][0]['default']['#default_value'])) {
    $form['og_group_ref'][$form['language']['#value']][0]['default']['#default_value'] = $_SESSION['og_context']['gid'];
  }
}
