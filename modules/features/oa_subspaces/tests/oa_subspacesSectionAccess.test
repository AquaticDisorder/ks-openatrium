<?php

/**
 * @file
 * Tests permission inheritence for oa_subspaces
 */

class oa_subspacesSectionAccess extends oa_coreBaseWebTest {
  static function getInfo() {
    return array(
      'name' => 'OA Subspace Section Permission test',
      'description' => 'Test that can access sections correctly',
      'group' => 'OA - Subspaces',
    );
  }

  function test_oa_subspacesSectionAccess() {
    extract($this->createOaSpaceAndUsers(array('og_user_inheritance' => array(LANGUAGE_NONE => array(0 => array('value' => 1))))));
    $space_member_2 = $this->createUserInOaSpace($space);
    $child = $this->createOaSpace(array('oa_parent_space' => array(LANGUAGE_NONE => array(0 => array('target_id' => $space->nid)))));

    foreach (array('parent space' => $space, 'child space' => $child) as $text => $test_space) {
      $this->drupalLogin($space_admin);
      $this->drupalGet('node/' . $test_space->nid);
      // This is copy and pasted from test_oa_sectionsAccess with $space
      // replaced with $test_space
      $section_public = $this->createNodeInOaSpace($test_space, array('type' => 'oa_section'));
      $this->assertTrue(node_access('view', $section_public, $space_member), t('Member can view public section for @space', array('@space' => $text)));
      $this->drupalLogin($space_member);
      $this->drupalGet('node/' . $section_public->nid);
      $this->assertResponse(200, t('Member can view public section for @space (http response code).', array('@space' => $text)));
  
      $this->assertTrue(node_access('view', $section_public, user_load(0)), t('Anonymous can view public section for @space', array('@space' => $text)));
      $this->drupalLogout();
      $this->drupalGet('node/' . $section_public->nid);
      $this->assertResponse(200, t('Anonymous can view public section for @space (http response code).', array('@space' => $text)));
  
      $this->drupalLogin($space_admin);
      $section_space_member_only = $this->createNodeInOaSpace($test_space, array('type' => 'oa_section', 'field_oa_user_ref' => array(LANGUAGE_NONE => array(array('target_id' => $space_member->uid)))));
  
      $this->assertFalse(node_access('view', $section_space_member_only, user_load(0)), t('Anonymous cannot view privatesection for @space', array('@space' => $text)));
      $this->drupalLogout();
      $this->drupalGet('node/' . $section_space_member_only->nid);
      $this->assertResponse(403, t('Anonymous cannot view private section for @space (http response code).', array('@space' => $text)));
  
      $this->assertTrue(node_access('view', $section_space_member_only, user_load($space_member->uid)), t('Member can view private section for @space.', array('@space' => $text)));
      $this->drupalLogin($space_member);
      $this->drupalGet('node/' . $section_space_member_only->nid);
      $this->assertResponse(200, t('Member can view private section for @space (http response code).', array('@space' => $text)));
  
      $this->assertFalse(node_access('view', $section_space_member_only, $space_admin), t('Group admin cannot view private section for @space.', array('@space' => $text)));
      $this->drupalLogin($space_admin);
      $this->drupalGet('node/' . $section_space_member_only->nid);
      $this->assertResponse(403, t('Admin cannot view private section for @space (http response code).', array('@space' => $text)));
  
      $this->assertFalse(node_access('view', $section_space_member_only, $space_member_2), t('Non-included member cannot view private section for @space.', array('@space' => $text)));
      $this->drupalLogin($space_member_2);
      $this->drupalGet('node/' . $section_space_member_only->nid);
      $this->assertResponse(403, t('Non-included member cannot view private section for @space (http response code).', array('@space' => $text)));
  
      $this->drupalLogin($space_member);
      $this->drupalGet('node/' . $test_space->nid);
      $this->assertText($section_public->title, t('Public section title appears somewhere on homepage for member for @space.', array('@space' => $text)));
      $this->assertText($section_space_member_only->title, t('Private section title appears somewhere on homepage for member for @space.', array('@space' => $text)));
    
      $this->drupalLogin($space_admin);
      $this->drupalGet('node/' . $test_space->nid);
      $this->assertText($section_public->title, t('Public section title appears somewhere on homepage for admin for @space.', array('@space' => $text)));
      $this->assertNoText($section_space_member_only->title, t('Private section title does not appear somewhere on homepage for admin for @space.', array('@space' => $text)));
    
      $this->drupalLogin($space_member_2);
      $this->drupalGet('node/' . $test_space->nid);
      $this->assertText($section_public->title, t('Public section title appears somewhere on homepage for admin for @space.', array('@space' => $text)));
      $this->assertNoText($section_space_member_only->title, t('Private section title does not appear somewhere on homepage for admin for @space.', array('@space' => $text)));
  
      $this->drupalLogout();
      $this->drupalGet('node/' . $test_space->nid);
      $this->assertText($section_public->title, t('Public section title appears somewhere on homepage for anonymous for @space.', array('@space' => $text)));
      $this->assertNoText($section_space_member_only->title, t('Private section title does not appear somewhere on homepage for anonymous for @space.', array('@space' => $text)));
    }
  }
}
