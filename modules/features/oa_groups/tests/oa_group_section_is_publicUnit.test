<?php
class og_group_section_is_publicUnitTest extends og_groupBaseUnitTest {
  static function getInfo() {
    return array(
      'name' => 'og_group_section_is_public function Tests',
      'description' => 'Test the public interface of the og_group_section_is_public function',
      'group' => 'OA',
    );
  }
  public function testoa_groups_section_is_public_success() {

    $node = (object) array(
      'field_oa_organization_ref' => array(LANGUAGE_NONE => array()),
      'field_oa_team_ref' => array(LANGUAGE_NONE => array()),
      'field_oa_user_ref' => array(LANGUAGE_NONE => array()),
    );
    $this->assertEqual(
      oa_groups_section_is_public($node),
      TRUE,
      'If Node does not have any visibilty settings should return TRUE'
    );
  }
  public function testoa_groups_section_is_public_fail() {

    $node = (object) array(
      'field_oa_organization_ref' => array(LANGUAGE_NONE => array('something')),
      'field_oa_team_ref' => array(LANGUAGE_NONE => array()),
      'field_oa_user_ref' => array(LANGUAGE_NONE => array()),
    );
    $this->assertEqual(
      oa_groups_section_is_public($node),
      FALSE,
      'If Node does has a organization visibilty setting then it is not public'
    );
    $node = (object) array(
      'field_oa_organization_ref' => array(LANGUAGE_NONE => array()),
      'field_oa_team_ref' => array(LANGUAGE_NONE => array("something")),
      'field_oa_user_ref' => array(LANGUAGE_NONE => array()),
    );
    $this->assertEqual(
      oa_groups_section_is_public($node),
     FALSE ,
      'If Node does has a team visibilty setting then it is not public'
    );
    $node = (object) array(
      'field_oa_organization_ref' => array(LANGUAGE_NONE => array()),
      'field_oa_team_ref' => array(LANGUAGE_NONE => array()),
      'field_oa_user_ref' => array(LANGUAGE_NONE => array("something")),
    );
    $this->assertEqual(
      oa_groups_section_is_public($node),
     FALSE ,
      'If Node does has a user visibilty setting then it is not public'
    );
  }
}
