<?php
/**
 * @file
 * Code for the OpenAtrium Discussion feature.
 */

include_once 'oa_discussion.features.inc';
include_once 'oa_discussion.theme.inc';

/*
 * Implements hook_ctools_plugin_directory
 */
function oa_discussion_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/content_types';
  }
}

/**
 * Implements hook_form_alter
 */
function oa_discussion_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if (strstr($form_id, 'node_form') && (arg(1) == 'add') &&
    (arg(2) == 'oa-discussion-post')) {
    $parent_id = arg(3);
    // we are in an node/add form
    // Set the Parent field if we have an argument passed to us
    $node = node_load($parent_id);
    if (!empty($node)) {
      // don't allow a child of a child...single level structure
      $parent_parent = field_get_items('node', $node, 'oa_parent');
      if (!empty($parent_parent[0]['target_id'])) {
        $parent_id = $parent_parent[0]['target_id'];
      }
      if (isset($form['oa_parent']) &&
        empty($form['oa_parent'][LANGUAGE_NONE]['#default_value'])) {
        $form['oa_parent'][LANGUAGE_NONE]['#default_value'] = $parent_id;
      }
    }
  }
}

/**
 * Implements hook_oa_messages_type_alter
 * Override the oa_create message for discussion replies
 */
function oa_discussion_oa_messages_type_alter(&$message_type, $context) {
  if ($message_type == 'oa_create') {
    $entity_wrapper = $context['entity_wrapper'];
    if (isset($entity_wrapper->oa_parent)) {
      // just tells us the field exists, not if it points to a node
      $parent = $entity_wrapper->oa_parent->value();
      // cannot use isset directly on wrapper->parent->value() unfortunately
      if (isset($parent)) {
        $message_type = 'oa_reply';
      }
    }
  }
}
