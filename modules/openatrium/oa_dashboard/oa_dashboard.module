<?php

/**
 * Implements hook_block_info()
 */
function oa_dashboard_block_info() {
  $blocks['oa_toolbar'] = array(
    'info' => t('Open Atrium Toolbar'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['oa_user_badge'] = array(
    'info' => t('Open Atrium User Badge'),
    'cache' => DRUPAL_CACHE_PER_USER,
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function oa_dashboard_block_view($delta = '') {
  $block = array();

  switch($delta) {
  	case 'oa_toolbar':
  	  $block['subject'] = '';
      $block['content'] = theme('oa_toolbar');
  	  break;
    case 'oa_user_badge':
      $block['subject'] = '';
      $block['content'] = theme('oa_user_badge');
  }

  return $block;
}

/**
 * Implements hook_theme()
 */
function oa_dashboard_theme() {
  return array(
    'oa_toolbar' => array(
      'template' => 'oa_toolbar',
    ),
    'oa_user_badge' => array(
      'template' => 'oa_user_badge',
    ),
  );
}

/**
 * Preprocess function for the oa_toolbar block.
 */
function oa_dashboard_preprocess_oa_toolbar(&$variables) {
  global $user;

  // Separators
  $variables['oa_toolbar_separator'] = t('&gt;');
  $variables['home_url'] = url('<front>', array('absolute' => TRUE));

  // Groups
  $group_id = NULL;
  if (isset($_SESSION['oa_group_id'])) {
    $group_id = $_SESSION['oa_group_id'];
  }
  $variables['groups_label'] = '';
  $variables['groups_recent'] = '';
  $variables['groups_favorite'] = '';
  $variables['sections_label'] = '';
  $variables['sections_list'] = '';

  // grab list of user's groups and sections
  $group_options = array(
    'attributes' => array(
      'class' => array('dropdown-toggle', 'btn', 'btn-large', 'btn-success'),
      )
    );
  $variables['groups_label'] = l(t('Groups'), 'groups', $group_options);
  if (isset($group_id)) {
    // get name of current group (without fully loading node)
    $title = oa_groups_get_titles(array($group_id));
    if (!empty($title['titles'][0])) {
      $variables['groups_label'] = l($title['titles'][0], 'node/' . $group_id, $group_options);
    }
  }

  // get names of groups
  if ($user->uid == 0) {
    // og_get_entity_groups doesn't return anything for anonymous users
    // so return list of all public groups
    $groups = oa_get_public_groups();
  }
  else {
    $groups = og_get_entity_groups('user', $user);
  }
  if (empty($groups['node'])) {
    $list = array();
  }
  else {
    $items = oa_groups_get_titles($groups['node'], OA_GROUP_TYPE);
    $list = oa_groups_truncate_list($items['links'], 10,
      l(t('All groups...'), 'groups',
        array('attributes' => array('class' => array('more-link')))));
  }
  if (!empty($list)) {
    $variables['groups_recent'] = theme('item_list', array(
      'items' => $list,
      'title' => t('Active Groups'),
      'type' => 'ul',
    ));
  }

  if (module_exists('oa_favorites')) {
    // get list of favorite groups
    $items = oa_favorites_get_groups($user);
    if (!empty($items['links'])) {
      $variables['groups_favorite'] = theme('item_list', array(
        'items' => $items['links'],
        'title' => t('Favorite Groups'),
        'type' => 'ul',
      ));
    }
  }

  $current_section = !empty($_SESSION['oa_section_id']) ? $_SESSION['oa_section_id'] : 0;
  $section_name = '';

  $variables['sections_label'] = t('Group home');
  if (isset($group_id)) {
    $group_link = l(t('Group home'), 'node/' . $group_id);
    $items = array();
    // grab the titles of the sections for the current group
    $sections = oa_groups_group_sections($group_id);
    if (!empty($sections)) {
      // check for match with current section id
      foreach ($sections as $sid => $title) {
        $items[] = l($title, 'node/' . $sid);
        if ($sid == $current_section) {
          $section_name = $title;
        }
      }
      // add the Group home page link and create the ul list
      array_unshift($items, $group_link);
    }
    else {
      $items[] = $group_link;
    }
    if (!empty($items)) {
      $variables['sections_list'] = theme('item_list', array(
        'items' => $items,
        'type' => 'ul',
      ));
    }
  }
  // Current Section Name from current page name
  $section = menu_get_object();
  if (isset($section->type)) {
    switch ($section->type) {
      case OA_SECTION_TYPE:
        $section_name = $section->title;
        break;
      case OA_GROUP_TYPE:
        $section_name = $variables['sections_label'];
    }
  }
  $variables['sections_label'] = $section_name;
}


/**
 * Preprocess function for the oa_user_badge block.
 */
function oa_dashboard_preprocess_oa_user_badge(&$vars) {
  global $user;
  
  if ($user->uid) {
    // user_load gets us the fields the global variable doesn't have.
    $user = user_load($user->uid);
    $vars['user'] = $user;
    $vars['name'] = empty($user->realname) ? $user->name : $user->realname;
    
    if (!empty($user->field_user_picture)) {
      $picture = $user->field_user_picture[LANGUAGE_NONE][0];
      $image = array(
        'style_name' => 'oa_small_thumbnail',
        'path' => $picture['uri'],
        'width' => $picture['width'],
        'height' => $picture['height'],
        'alt' => t('Your profile picture'),
      );
      $vars['picture'] = theme('image_style', $image);
    }
  
    //Build out links
    $vars['links']['dashboard'] = l(t('Dashboard'), 'user');
    $vars['links']['edit_profile'] = l(t('Edit profile'), 'user/' . $user->uid . '/edit');
    $vars['links']['log_out'] = l(t('Log out'), 'user/logout');
  }
}
